#### Use two appenders, one to log to console, another to log to a file
#log4j.rootCategory=debug, stdout, R
log4j.rootCategory=debug, R

# Print only messages of priority WARN or higher for your category
log4j.category.your.category.name=WARN
# Specifically inherit the priority level
#log4j.category.your.category.name=INHERITED
# Ignore OpenJMS debug messages
log4j.category.org.exolab.jms=INFO
log4j.category.org.hibernate=INFO
log4j.category.com.mchange=INFO

#### First appender writes to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=%5p %d - %m%n

#### Second appender writes to a file
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=/tmp/dendrogram.log

# Control the maximum log file size
log4j.appender.R.MaxFileSize=5000KB
# Archive log files (one backup file here)
log4j.appender.R.MaxBackupIndex=10

log4j.appender.R.layout=org.apache.log4j.PatternLayout
# level date: thread class - message
#log4j.appender.R.layout.ConversionPattern=%p %d: %t %c - %m%n
# level date: class - message
log4j.appender.R.layout.ConversionPattern=%p %d: %c - %m%n
#log4j.appender.R.layout.ConversionPattern=%p %d: %m%n

